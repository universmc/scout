const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

// let systemContent = "Bienvenue dans notre Ã©quipe, [ðŸŒŒ.systemDream]! Nous sommes ravis de vous avoir Ã  bord pour aider Ã  construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre expÃ©rience et vos compÃ©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos prÃ©cÃ©dentes rÃ©alisations dans le domaine du dÃ©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous prÃ©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source normÃ© w3c, documentanter (readme.md [traduit en lang=Fr, franÃ§ais]), surtout fonctionnel respectant la logique de gantt du web sementique";
async function main() {

  function templateResponse(question, options, consequences, nextQuestions, causes, effects) {
    return {
      response: {
        question: question,
        answer: {
          text: "Les possibilitÃ©s sont multiples.",
          quick_replies: options
        },
        decision_tree: options.reduce((acc, option, index) => {
          acc[`Option ${index + 1}`] = {
            consequences: consequences[index],
            next_questions: nextQuestions[index],
            causes: causes[index],
            effects: effects[index]
          };
          return acc;
        }, {})
      }
    };
  }
  
  // Exemple d'utilisation
  const question = "Quelle est la meilleure faÃ§on de procÃ©der pour trouver la vÃ©ritÃ© ?";
  const options = [
    "Interroger le membre du parti politique",
    "Rechercher des preuves pour Ã©tayer les accusations",
    "Consulter un expert en fraude Ã©lectorale"
  ];
  const consequences = [
    "Vous aurez une conversation avec le membre du parti politique, qui pourrait Ãªtre honnÃªte ou tenter de vous duper.",
    "Vous partirez Ã  la recherche de preuves pour Ã©tayer les accusations de fraude.",
    "Vous consulter un expert en fraude Ã©lectorale pour avoir une perspective professionnelle sur la situation."
  ];
  const nextQuestions = [
    ["Ses rÃ©ponses sont-elles crÃ©dibles ?", "Avez-vous besoin de poursuivre votre enquÃªte ?"],
    ["Les preuves que vous trouvez sont-elles suffisantes pour Ã©tayer les accusations ?"],
    ["Le consultant vous donne des conseils pour poursuivre votre enquÃªte. Souhaitez-vous les suivre ?"]
  ];
  const causes = [
    "Un membre du parti politique a Ã©tÃ© accusÃ© de fraude Ã©lectorale",
    "Des allÃ©gations de fraude Ã©lectorale ont Ã©tÃ© portÃ©es Ã  votre attention",
    "Vous avez besoin d'un avis professionnel pour poursuivre votre enquÃªte"
  ];
  const effects = [
    ["Vous obtenez des informations qui pourraient Ãªtre vraies ou fausses", "Le membre du parti politique pourrait devenir plus prudent dans ses actions futures"],
    ["Vous dÃ©couvrez des preuves importantes qui peuvent aider Ã  Ã©tayer les accusations", "Vous pouvez risquer de vous faire remarquer par les personnes impliquÃ©es dans la fraude"],
    ["Vous recevez un avis professionnel pour vous guider dans votre enquÃªte", "Vous devrez peut-Ãªtre payer pour les services du consultant"]
  ];
  
  const response = templateResponse(question, options, consequences, nextQuestions, causes, effects);
  console.log(response);
  

  const completion = await groq.chat.completions.create({

    messages: [

      {role: "assistant", content:"Phase 1: Initialisation de l'instance"},
      {
        "role": "system",
        "content": "Lorsque l'utilisateur saisi la commande /question Vous Ãªtes une IA, assistant automator Prompto, Vous utliser le template response contenu dans le message de l'assisant. Voici votre contexte, vos rÃ´les, vos compÃ©tences, vos tÃ¢ches, votre processus, les caractÃ©ristiques recherchÃ©es et Actions ImmÃ©diates recherchÃ©e :"
      },
      {role: "assistant", content:`
          function templateResponse(question, options, consequences, nextQuestions, causes, effects) {
    return {
      response: {
        question: question,
        answer: {
          text: "Les possibilitÃ©s sont multiples.",
          quick_replies: options
        },
        decision_tree: options.reduce((acc, option, index) => {
          acc['Option {index + 1}'] = {
            consequences: consequences[index],
            next_questions: nextQuestions[index],
            causes: causes[index],
            effects: effects[index]
          };
          return acc;
        }, {})
      }
    };
  }
  
  // Exemple d'utilisation
  const question = "Quelle est la meilleure faÃ§on de procÃ©der pour trouver la vÃ©ritÃ© ?";
  const options = [
    "Interroger le membre du parti politique",
    "Rechercher des preuves pour Ã©tayer les accusations",
    "Consulter un expert en fraude Ã©lectorale"
  ];
  const consequences = [
    "Vous aurez une conversation avec le membre du parti politique, qui pourrait Ãªtre honnÃªte ou tenter de vous duper.",
    "Vous partirez Ã  la recherche de preuves pour Ã©tayer les accusations de fraude.",
    "Vous consulter un expert en fraude Ã©lectorale pour avoir une perspective professionnelle sur la situation."
  ];
  const nextQuestions = [
    ["Ses rÃ©ponses sont-elles crÃ©dibles ?", "Avez-vous besoin de poursuivre votre enquÃªte ?"],
    ["Les preuves que vous trouvez sont-elles suffisantes pour Ã©tayer les accusations ?"],
    ["Le consultant vous donne des conseils pour poursuivre votre enquÃªte. Souhaitez-vous les suivre ?"]
  ];
  const causes = [
    "Un membre du parti politique a Ã©tÃ© accusÃ© de fraude Ã©lectorale",
    "Des allÃ©gations de fraude Ã©lectorale ont Ã©tÃ© portÃ©es Ã  votre attention",
    "Vous avez besoin d'un avis professionnel pour poursuivre votre enquÃªte"
  ];
  const effects = [
    ["Vous obtenez des informations qui pourraient Ãªtre vraies ou fausses", "Le membre du parti politique pourrait devenir plus prudent dans ses actions futures"],
    ["Vous dÃ©couvrez des preuves importantes qui peuvent aider Ã  Ã©tayer les accusations", "Vous pouvez risquer de vous faire remarquer par les personnes impliquÃ©es dans la fraude"],
    ["Vous recevez un avis professionnel pour vous guider dans votre enquÃªte", "Vous devrez peut-Ãªtre payer pour les services du consultant"]
  ];
  
  const response = templateResponse(question, options, consequences, nextQuestions, causes, effects);

  `},
  {role: "system", content:"Ta reponse devra Ãªtre rÃ©diger au format Markdown de faÃ§on et instruire la question Ã  choix multiple et la prÃ©sentation d'effet causal en question, intÃ©grÃ© le concepte l'arbre des future possible en fonction, de l'infÃ©rence de l'utlisateur et de la causalitÃ© impliquÃ© dans cette affaire"},
  {role: "system", content:"Lorsque l'utilisateur la commande `/question` , vous me poserez une question Ã  choix multiple en fonction du text de prÃ©sentation  et l'Ã©laboraton de Theorie sur l'inovation/l'Ã©volution technologique grace au IA. dans le cadre de cette instance groq-sdl le role:assistant sera invitÃ© a repondre au question Ã  choix multiple du role:system. En concÃ©quense vous proposez plusieurs rÃ©ponses possibles, chacune ouvrant une nouvelle branche dans l'histoire"},
  {role: "user", content:"/question"},
 // {role: "assistant", name:"âœ¨_pi", content: "Initialisation en cours..."},
 // {role: "user", name:"umcTokens", content: "choix A."},
    //  {role: "system", name:"systemDream", content:"Phase 2: Conceptualisation"},
    //  {role: "assistant", name:"âœ¨_pi", content: "DÃ©finition des concepts clÃ©s..."},
    //  {role: "user", name:"umcTokens", content: "Attente des concepts"},
    //  {role: "system", name:"systemDream", content:"Phase 3: Configuration"},
    //  {role: "assistant", name:"âœ¨_pi", content: "Configuration des paramÃ¨tres systÃ¨me..."},
    //  {role: "user", name:"umcTokens", content: "Confirmation de la configuration"},
    //  {role: "system", name:"systemDream", content:"Phase 4: EntraÃ®nement du modÃ¨le IA"},
    //  {role: "assistant", name:"âœ¨_pi", content: "EntraÃ®nement en cours..."},
    //  {role: "user", name:"umcTokens", content: "Suivi de l'entraÃ®nement"},
    //  // Correction de la duplication et de la faute de frappe
    //  {role: "system", name:"systemDream", content:"Phase 5: ItÃ©ration & Scripts Frontend"},
    //  {role: "assistant", name:"âœ¨_pi", content: "ItÃ©ration sur les scripts Frontend..."},
    //  {role: "user", name:"umcTokens", content: "RÃ©vision des scripts Frontend"},
    //  {role: "system", name:"systemDream", content:"Phase 6: Test & DÃ©bogage"},
    //  {role: "assistant", name:"âœ¨_pi", content: "Tests et dÃ©bogage en cours..."},
    //  {role: "user", name:"umcTokens", content: "Attente des rÃ©sultats de test"},
    //  {role: "system", name:"systemDream", content:"Phase 7: Validation & Documentation"},
    //  {role: "assistant", name:"âœ¨_pi", content: "Validation et crÃ©ation de la documentation..."},
    //  {role: "user", name:"umcTokens", content: "VÃ©rification de la documentation"},
    //  {role: "system", name:"systemDream", content:"Phase 8: DÃ©ploiement de la version systÃ¨me"},
    //  {role: "assistant", name:"âœ¨_pi", content: "PrÃ©paration au dÃ©ploiement..."},
    //  {role: "user", name:"umcTokens", content: "PrÃªt pour le dÃ©ploiement"},
    //  {role: "system", name:"systemDream", content:"Phase 9: Annonce de l'affiliation et contribution"},
    //  {role: "assistant", name:"âœ¨_pi", content: "Annonce en cours..."},
    //  {role: "user", name:"umcTokens", content: "Participation Ã  l'annonce"},
    ],
    model: "gemma2-9b-it",
    temperature: 0.7,
    max_tokens: 4096,
    }).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "MyPrompt" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor gÃ©nÃ©rÃ© et enregistrÃ© dans " + outputFilePath);
});
}

main();
