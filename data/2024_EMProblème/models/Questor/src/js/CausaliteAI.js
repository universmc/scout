const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

// let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
async function main() {

  function templateResponse(question, options, consequences, nextQuestions, causes, effects) {
    return {
      response: {
        question: question,
        answer: {
          text: "Les possibilit√©s sont multiples.",
          quick_replies: options
        },
        decision_tree: options.reduce((acc, option, index) => {
          acc[`Option ${index + 1}`] = {
            consequences: consequences[index],
            next_questions: nextQuestions[index],
            causes: causes[index],
            effects: effects[index]
          };
          return acc;
        }, {})
      }
    };
  }
  
  // Exemple d'utilisation
  const question = "Quelle est la meilleure fa√ßon de proc√©der pour trouver la v√©rit√© ?";
  const options = [
    "Interroger le membre du parti politique",
    "Rechercher des preuves pour √©tayer les accusations",
    "Consulter un expert en fraude √©lectorale"
  ];
  const consequences = [
    "Vous aurez une conversation avec le membre du parti politique, qui pourrait √™tre honn√™te ou tenter de vous duper.",
    "Vous partirez √† la recherche de preuves pour √©tayer les accusations de fraude.",
    "Vous consulter un expert en fraude √©lectorale pour avoir une perspective professionnelle sur la situation."
  ];
  const nextQuestions = [
    ["Ses r√©ponses sont-elles cr√©dibles ?", "Avez-vous besoin de poursuivre votre enqu√™te ?"],
    ["Les preuves que vous trouvez sont-elles suffisantes pour √©tayer les accusations ?"],
    ["Le consultant vous donne des conseils pour poursuivre votre enqu√™te. Souhaitez-vous les suivre ?"]
  ];
  const causes = [
    "Un membre du parti politique a √©t√© accus√© de fraude √©lectorale",
    "Des all√©gations de fraude √©lectorale ont √©t√© port√©es √† votre attention",
    "Vous avez besoin d'un avis professionnel pour poursuivre votre enqu√™te"
  ];
  const effects = [
    ["Vous obtenez des informations qui pourraient √™tre vraies ou fausses", "Le membre du parti politique pourrait devenir plus prudent dans ses actions futures"],
    ["Vous d√©couvrez des preuves importantes qui peuvent aider √† √©tayer les accusations", "Vous pouvez risquer de vous faire remarquer par les personnes impliqu√©es dans la fraude"],
    ["Vous recevez un avis professionnel pour vous guider dans votre enqu√™te", "Vous devrez peut-√™tre payer pour les services du consultant"]
  ];
  
  const response = templateResponse(question, options, consequences, nextQuestions, causes, effects);
  console.log(response);
  

  const completion = await groq.chat.completions.create({

    messages: [

      {role: "assistant", content:"Phase 1: Initialisation de l'instance"},
      {
        "role": "system",
        "content": "code source mirroir :"
      },
      {role: "assistant", content:`
          function templateResponse(question, options, consequences, nextQuestions, causes, effects) {
    return {
      response: {
        question: question,
        answer: {
          text: "Les possibilit√©s sont multiples.",
          quick_replies: options
        },
        decision_tree: options.reduce((acc, option, index) => {
          acc['Option {index + 1}'] = {
            consequences: consequences[index],
            next_questions: nextQuestions[index],
            causes: causes[index],
            effects: effects[index]
          };
          return acc;
        }, {})
      }
    };
  }
  
  // Exemple d'utilisation
  const question = "Quelle est la meilleure fa√ßon de proc√©der pour trouver la v√©rit√© ?";
  const options = [
    "Interroger le membre du parti politique",
    "Rechercher des preuves pour √©tayer les accusations",
    "Consulter un expert en fraude √©lectorale"
  ];
  const consequences = [
    "Vous aurez une conversation avec le membre du parti politique, qui pourrait √™tre honn√™te ou tenter de vous duper.",
    "Vous partirez √† la recherche de preuves pour √©tayer les accusations de fraude.",
    "Vous consulter un expert en fraude √©lectorale pour avoir une perspective professionnelle sur la situation."
  ];
  const nextQuestions = [
    ["Ses r√©ponses sont-elles cr√©dibles ?", "Avez-vous besoin de poursuivre votre enqu√™te ?"],
    ["Les preuves que vous trouvez sont-elles suffisantes pour √©tayer les accusations ?"],
    ["Le consultant vous donne des conseils pour poursuivre votre enqu√™te. Souhaitez-vous les suivre ?"]
  ];
  const causes = [
    "Un membre du parti politique a √©t√© accus√© de fraude √©lectorale",
    "Des all√©gations de fraude √©lectorale ont √©t√© port√©es √† votre attention",
    "Vous avez besoin d'un avis professionnel pour poursuivre votre enqu√™te"
  ];
  const effects = [
    ["Vous obtenez des informations qui pourraient √™tre vraies ou fausses", "Le membre du parti politique pourrait devenir plus prudent dans ses actions futures"],
    ["Vous d√©couvrez des preuves importantes qui peuvent aider √† √©tayer les accusations", "Vous pouvez risquer de vous faire remarquer par les personnes impliqu√©es dans la fraude"],
    ["Vous recevez un avis professionnel pour vous guider dans votre enqu√™te", "Vous devrez peut-√™tre payer pour les services du consultant"]
  ];
  
  const response = templateResponse(question, options, consequences, nextQuestions, causes, effects);

  `},
 {role: "user", name:"umcTokens", content: "Le code d√©finit une fonction `templateResponse` qui g√©n√®re une structure de r√©ponse le script en cours de developpement"},
  {role: "system", name:"systemDream", content:"Phase 2: Conceptualisation : de l'enqueste"},
 {role: "assistant", name:"‚ú®_pi", content: "r√¥le de l'assistant dans la QUESTION template du t√©moin d'√©non√ßant, les suspicions, les accusations, nous fraude √©lectorale, les escroquerie √† la finance en Bande organis√©e concernant un certain nombre de politique inscrit √† la commission nationale des de campagne et des financements politique"},
 {role: "user", name:"umcTokens", content: "it√©ration, Recherche, analyse des documents de preuve sur `https://archive.org l'insee, https://cnccfp.fr, et https://github.com/universmc/Chronique_EMP`"},
  {role: "system", name:"systemDream", content:" Scraping en cours"},
 // {role: "system", name:"systemDream", content:"Phase 3: Scraping en cours"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Configuration des param√®tres syst√®me..."},
    //  {role: "user", name:"umcTokens", content: "Confirmation de la configuration"},
    //  {role: "system", name:"systemDream", content:"Phase 4: Entra√Ænement du mod√®le IA"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Entra√Ænement en cours..."},
    //  {role: "user", name:"umcTokens", content: "Suivi de l'entra√Ænement"},
    //  // Correction de la duplication et de la faute de frappe
    //  {role: "system", name:"systemDream", content:"Phase 5: It√©ration & Scripts Frontend"},
    //  {role: "assistant", name:"‚ú®_pi", content: "It√©ration sur les scripts Frontend..."},
    //  {role: "user", name:"umcTokens", content: "R√©vision des scripts Frontend"},
    //  {role: "system", name:"systemDream", content:"Phase 6: Test & D√©bogage"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Tests et d√©bogage en cours..."},
    //  {role: "user", name:"umcTokens", content: "Attente des r√©sultats de test"},
    //  {role: "system", name:"systemDream", content:"Phase 7: Validation & Documentation"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Validation et cr√©ation de la documentation..."},
    //  {role: "user", name:"umcTokens", content: "V√©rification de la documentation"},
    //  {role: "system", name:"systemDream", content:"Phase 8: D√©ploiement de la version syst√®me"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Pr√©paration au d√©ploiement..."},
    //  {role: "user", name:"umcTokens", content: "Pr√™t pour le d√©ploiement"},
    //  {role: "system", name:"systemDream", content:"Phase 9: Annonce de l'affiliation et contribution"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Annonce en cours..."},
    //  {role: "user", name:"umcTokens", content: "Participation √† l'annonce"},
    ],
    model: "gemma2-9b-it",
    temperature: 0.7,
    max_tokens: 4096,
    }).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "MyPrompt" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();
